name: Build and Deploy ASP.NET MVC App to Azure Web App

on:
  push:
    branches:
      - master

# CONFIGURATION
# For help, go to https://github.com/Azure/Actions
#
# 1. Set up the following secrets in your repository:
#   AZURE_WEBAPP_PUBLISH_PROFILE
#
# 2. Change these variables for your configuration:
env:
  AZURE_WEBAPP_NAME: netframeworktest4    # set this to your application's name
  AZURE_WEBAPP_PACKAGE_PATH: '.'   # set this to the path to your web app project, defaults to the repository root
  NUGET_VERSION: '5.0.0'           # set this to the dot net version to use
  RESOURCEGROUPNAME: "netfrstarter-rg"
  LOCATION: "centralus"
  HOSTINGPLANNAME: "netfrstarter-plan"
  APPINSIGHTLOCATION: "central us"
  SKU: "S1 Standard"

jobs:
  build:
    runs-on: windows-latest
    steps:

    # checkout the repo
    - uses: actions/checkout@master

    - name: Creating artifact directories
      run: |
        mkdir buildartifacts
        mkdir deploymenttemplates
    
    - name: Install Nuget
      uses: nuget/setup-nuget@v1
      with:
        nuget-version: ${{ env.NUGET_VERSION}}
    - name: NuGet to restore dependencies as well as project-specific tools that are specified in the project file
      run: |
        cd Application
        nuget restore
  
    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.0.0
    
    - name: Run MSBuild
      run: |
        cd Application
        msbuild .\SampleWebApplication.sln -p:Configuration=Release

    - name: Setup .NET sdk
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.302
    
    - name: And then we test it
      run: | 
        cd Application\SampleWebApplication.UnitTests
        dotnet test bin\Release\*.UnitTests.dll --verbosity normal

  FunctionalTests:
    name: Run Functional tests
    runs-on: windows-latest
    needs: build
    steps:
        # checkout the repo
    - uses: actions/checkout@master

    - name: Install Nuget
      uses: nuget/setup-nuget@v1
      with:
        nuget-version: ${{ env.NUGET_VERSION}}
    - name: NuGet to restore dependencies as well as project-specific tools that are specified in the project file
      run: |
        cd Application
        nuget restore
  
    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.0.0
    
    - name: Run MSBuild
      run: |
        cd Application
        msbuild .\SampleWebApplication.sln -p:Configuration=Release

    - name: Setup .NET sdk
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.302 

    - name: update web app url in Run Settings
      shell: powershell
      run: |
        cd Application\SampleWebApplication.FunctionalTests
        [xml]$doc = Get-Content functionalTests.runsettings
        $doc.RunSettings.TestRunParameters.ChildNodes.Item(0).value = 'https://${{ env.AZURE_WEBAPP_NAME }}.azurewebsites.net/'
        $doc.Save("$(pwd)/functionalTests.runsettings")

    # Run functional tests
    - name: Run tests
      continue-on-error: false
      run: |
        pushd .
        cd $env:temp
        $Path = $env:TEMP; $Installer = "chrome_installer.exe"; Invoke-WebRequest "https://dl.google.com/chrome/install/latest/chrome_installer.exe" -OutFile $Path$Installer; Start-Process -FilePath $Path$Installer -Args "/silent /install" -Verb RunAs -Wait; Remove-Item $Path$Installer
        Invoke-WebRequest https://chromedriver.storage.googleapis.com/83.0.4103.39/chromedriver_win32.zip -outFile chromedriver.zip
        Expand-Archive -Path chromedriver.zip
        Remove-Item chromedriver.zip
        popd
        cd Application\SampleWebApplication.FunctionalTests
        dotnet test bin\Release\*.FunctionalTests.dll -s functionalTests.runsettings
  
